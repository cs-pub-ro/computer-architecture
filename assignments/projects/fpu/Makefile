COMPILER=iverilog
INTERPRETER=vvp
FLAGS=-Wall -Winfloop
TOP_MODULE=fpu
TOP_SIM_MODULE=test_${TOP_MODULE}
TOP_EVALUATE_MODULE=evaluate_${TOP_MODULE}
OTHER_SOURCES=
RESULT_FILE=result.out
EVALUATE_FILE=evaluate.out
GRADE_SCRIPT=grade.sh
EVALUATE_FLAGS=+INPUT_FILE=$(RESULT_FILE)
GENERATOR_COMPILER=g++ -std=c++20
GENERATOR_SOURCE=fpu.cpp
GENERATOR_BINARY=fpu

all: build

build:
	$(COMPILER) $(FLAGS) $(TOP_MODULE).v $(TOP_SIM_MODULE).v $(OTHER_SOURCES) -o $(TOP_MODULE).vvp

build_evaluate:
	$(GENERATOR_COMPILER) -o $(GENERATOR_BINARY) $(GENERATOR_SOURCE)
	./$(GENERATOR_BINARY) $(RESULT_FILE)
	$(COMPILER) $(FLAGS) ${TOP_MODULE}.v ${TOP_EVALUATE_MODULE}.v $(OTHER_SOURCES) -o $(TOP_EVALUATE_MODULE).vvp

run: build
	$(INTERPRETER) $(TOP_MODULE).vvp

run_evaluate: build_evaluate
	$(INTERPRETER) $(TOP_EVALUATE_MODULE).vvp $(EVALUATE_FLAGS) > $(EVALUATE_FILE) 2>&1

evaluate: run_evaluate
	./${GRADE_SCRIPT} $(EVALUATE_FILE)

clean:
	rm *.vvp $(DUMP_VCD_FILE) $(EVALUATE_FILE) $(RESULT_FILE) $(GENERATOR_BINARY)
