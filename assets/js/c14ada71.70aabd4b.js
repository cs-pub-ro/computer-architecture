"use strict";(globalThis.webpackChunkcomputer_architecture=globalThis.webpackChunkcomputer_architecture||[]).push([[7875],{816:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>g,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var r=t(8168),n=(t(6540),t(5680));const l={},i="Unitatea de comand\u0103",u={unversionedId:"Laboratoare/10 Calculator Didactic/Unitate de comanda/Teorie/README",id:"Laboratoare/10 Calculator Didactic/Unitate de comanda/Teorie/README",title:"Unitatea de comand\u0103",description:"Ne vom familiariza cu formatul instruc\u021biunilor calculatorului didactic \u0219i cu modul de func\u021bionare al unit\u0103\u021bii de comand\u0103. \xcen acest scop se vor implementa \xeen Verilog interpretarea \u0219i comandarea execu\u021biei pentru instruc\u021biunile specificate \xeen arhitectura calculatorului didactic studiat la curs.",source:"@site/docs/Laboratoare/10 Calculator Didactic/Unitate de comanda/Teorie/README.md",sourceDirName:"Laboratoare/10 Calculator Didactic/Unitate de comanda/Teorie",slug:"/Laboratoare/10 Calculator Didactic/Unitate de comanda/Teorie/",permalink:"/computer-architecture/Laboratoare/10 Calculator Didactic/Unitate de comanda/Teorie/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Unitate de comanda",permalink:"/computer-architecture/Laboratoare/10 Calculator Didactic/Unitate de comanda/"},next:{title:"11 Calculator Didactic",permalink:"/computer-architecture/Laboratoare/11 Calculator Didactic/"}},g={},p=[{value:"Implementare",id:"implementare",level:2},{value:"Codificarea instruc\u021biunilor",id:"codificarea-instruc\u021biunilor",level:2},{value:"Adresarea direct\u0103 la registru",id:"adresarea-direct\u0103-la-registru",level:2}],c={toc:p},o="wrapper";function m({components:e,...a}){return(0,n.yg)(o,(0,r.A)({},c,a,{components:e,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"unitatea-de-comand\u0103"},"Unitatea de comand\u0103"),(0,n.yg)("p",null,"Ne vom familiariza cu ",(0,n.yg)("strong",{parentName:"p"},"formatul instruc\u021biunilor")," calculatorului didactic \u0219i cu ",(0,n.yg)("strong",{parentName:"p"},"modul de func\u021bionare al unit\u0103\u021bii de comand\u0103"),". \xcen acest scop se vor implementa \xeen Verilog ",(0,n.yg)("strong",{parentName:"p"},"interpretarea")," \u0219i ",(0,n.yg)("strong",{parentName:"p"},"comandarea execu\u021biei")," pentru instruc\u021biunile specificate \xeen arhitectura calculatorului didactic studiat la curs."),(0,n.yg)("p",null,"Componentele calculatorului didactic implementate anterior registre, UAL formeaz\u0103 unitatea de execu\u021bie a procesorului. Pentru ca acestea s\u0103 re\u021bin\u0103 date \u0219i s\u0103 execute instruc\u021biunile procesorului, avem nevoie de o logic\u0103 hardware de comand\u0103 a acestora, logic\u0103 implementat\u0103 \xeen unitatea de comand\u0103."),(0,n.yg)("p",null,"\xcen interiorul unui procesor, instruc\u021biunile trec prin mai multe etape. Pentru calculatorul didactic avem urm\u0103toarele etape:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Fetch")," - aducerea instruc\u021biunii din memorie \xeen registrul instruc\u021biune (RI)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Decode")," - decodificarea instruc\u021biunii"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Load")," - \xeenc\u0103rcarea operanzilor"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Execute")," - executarea instruc\u021biunii"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"Store")," - scrierea rezultatului (dac\u0103 este cazul)")),(0,n.yg)("p",null,"Unitatea de comand\u0103 este implicat\u0103 \xeen toate etapele de mai sus: comand\u0103 prin semnalare aducerea codurilor instruc\u021biunilor din memorie, le decodific\u0103 \u0219i transmite semnale c\u0103tre unit\u0103\u021bile (registre, UAL, memorie) implicate \xeen execu\u021bia acelor instruc\u021biuni. La terminarea execu\u021biei fiec\u0103rei instruc\u021biuni se comand\u0103 scrierea rezultatului (dac\u0103 este cazul) \u0219i se actualizeaz\u0103 registrul ",(0,n.yg)("strong",{parentName:"p"},"CP")," (Contor Program) cu adresa instruc\u021biunii urm\u0103toare."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Ce trebuie s\u0103 fac\u0103 unitatea de comand\u0103 atunci c\xe2nd trebuie executat\u0103 o instruc\u021biune aritmetic\u0103 logic\u0103 cu un operand? De exemplu ",(0,n.yg)("inlineCode",{parentName:"strong"},"INC RA"),".")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"Semnale c\u0103tre ",(0,n.yg)("strong",{parentName:"li"},"CP")," \u0219i ",(0,n.yg)("strong",{parentName:"li"},"AM"),": valoarea din ",(0,n.yg)("strong",{parentName:"li"},"CP")," e pus\u0103 pe magistral\u0103 \u0219i scris\u0103 \xeen ",(0,n.yg)("strong",{parentName:"li"},"AM"),";"),(0,n.yg)("li",{parentName:"ul"},"Semnale c\u0103tre ",(0,n.yg)("strong",{parentName:"li"},"AM")," \u0219i memorie pentru a lua valoarea (codul instruc\u021biunii) de la adresa specificat\u0103 de ",(0,n.yg)("strong",{parentName:"li"},"AM"),";"),(0,n.yg)("li",{parentName:"ul"},"Semnal c\u0103tre ",(0,n.yg)("strong",{parentName:"li"},"RAM")," pentru a pune valoarea pe magistral\u0103 \u0219i c\u0103tre ",(0,n.yg)("strong",{parentName:"li"},"RI")," pentru a pune codul instruc\u021biunii \xeen el;"),(0,n.yg)("li",{parentName:"ul"},"Decodificare instruc\u021biune;"),(0,n.yg)("li",{parentName:"ul"},"Semnal c\u0103tre blocul de registre generale pentru a determina activarea con\u021binutului lui RA pe magistral\u0103 \u0219i semnal c\u0103tre ",(0,n.yg)("strong",{parentName:"li"},"T1")," pentru a \xeenc\u0103rca valoarea aflat\u0103 \xeen acest moment pe magistral\u0103;"),(0,n.yg)("li",{parentName:"ul"},"Semnal c\u0103tre ",(0,n.yg)("strong",{parentName:"li"},"UAL")," ce indic\u0103 opera\u021bia ",(0,n.yg)("strong",{parentName:"li"},"INC"),";"),(0,n.yg)("li",{parentName:"ul"},"Semnal c\u0103tre ",(0,n.yg)("strong",{parentName:"li"},"IND")," pentru ca UAL-ul s\u0103 poat\u0103 scrie flagurile;"),(0,n.yg)("li",{parentName:"ul"},"Semnal c\u0103tre blocul de registre generale pentru a \xeenc\u0103rca \xeen ",(0,n.yg)("strong",{parentName:"li"},"RA")," valoarea de pe magistral\u0103;"),(0,n.yg)("li",{parentName:"ul"},"Incrementarea ",(0,n.yg)("strong",{parentName:"li"},"CP")," pentru adresa instruc\u021biunii urm\u0103toare - semnal c\u0103tre ",(0,n.yg)("strong",{parentName:"li"},"CP")," pentru a scrie \xeen el.")),(0,n.yg)("h2",{id:"implementare"},"Implementare"),(0,n.yg)("p",null,"Unitatea de comand\u0103 este implementat\u0103 ca un ",(0,n.yg)("strong",{parentName:"p"},"automat de st\u0103ri"),". Modulul acesteia are urm\u0103toarele semnale:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"intr\u0103ri: ",(0,n.yg)("strong",{parentName:"li"},"clk"),", ",(0,n.yg)("strong",{parentName:"li"},"rst"),", ",(0,n.yg)("strong",{parentName:"li"},"ri")," (codul instruc\u021biunii), ",(0,n.yg)("strong",{parentName:"li"},"ind")," (indicatorii de condi\u021bie)"),(0,n.yg)("li",{parentName:"ul"},"ie\u0219iri:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"semnale ",(0,n.yg)("strong",{parentName:"li"},"oe")," (output-enable) \u0219i ",(0,n.yg)("strong",{parentName:"li"},"we")," (write-enable) pentru registre, bancul de registre, memorie \u0219i unitatea aritmetic\u0103 logic\u0103 (doar ",(0,n.yg)("strong",{parentName:"li"},"oe"),")"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"alu_opcode")," - codul opera\u021biei ce trebuie efectuat\u0103 de unitatea aritmetic\u0103 logic\u0103"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"alu_carry")," - carry-ul folosit de UAL \xeen cadrul opera\u021biei ce trebuie s\u0103 o execute"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"regs_addr")," - indexul unui registru din bancul de registre"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"ind_sel")," - controleaz\u0103 sursa de scriere \xeen registrul IND (0 = bus, 1 = alu flags)")))),(0,n.yg)("p",null,"Automatul trebuie s\u0103 ofere st\u0103ri pentru:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"aducerea instruc\u021biunii din memorie \xeen registrul ",(0,n.yg)("strong",{parentName:"li"},"RI")),(0,n.yg)("li",{parentName:"ul"},"decodificarea codului instruc\u021biunii pentru identificarea opera\u021biei ce trebuie efectuate \u0219i a operanzilor acesteia (dac\u0103 este cazul)"),(0,n.yg)("li",{parentName:"ul"},"interpretarea fiec\u0103rei instruc\u021biuni. Aceasta se traduce printr-o serie de st\u0103ri care seteaz\u0103 semnalele de output ale modulului pentru a comanda execu\u021bia instruc\u021biunii."),(0,n.yg)("li",{parentName:"ul"},"incrementarea registrului ",(0,n.yg)("strong",{parentName:"li"},"CP"))),(0,n.yg)("p",null,"\xcen implementarea unit\u0103\u021bii de comand\u0103 vom considera c\u0103 ",(0,n.yg)("strong",{parentName:"p"},"UAL-ul va pune rezultatul \xeen T1"),", \u0219i de acolo va fi transferat \xeen registre sau \xeen memorie. Aceast\u0103 conven\u021bie face mai simple \u0219i mai clare st\u0103rile care comand\u0103 execu\u021bia opera\u021biilor aritmetico-logice."),(0,n.yg)("h2",{id:"codificarea-instruc\u021biunilor"},"Codificarea instruc\u021biunilor"),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"Formatul instruc\u021biunilor calculatorului didactic",src:t(7991).A,width:"1764",height:"320"})),(0,n.yg)("p",null,(0,n.yg)("em",{parentName:"p"},"Figure: Formatul instruc\u021biunilor calculatorului didactic")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"COP")," - codul opera\u021biei, 7 bi\u021bi",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"bitul ","[0]"," - separ\u0103 instruc\u021biunile care folosesc o adres\u0103 efectiv\u0103 de cele care nu folosesc:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"0 - instruc\u021biuni cu calcul de adres\u0103 efectiv\u0103"),(0,n.yg)("li",{parentName:"ul"},"1 - instruc\u021biuni f\u0103r\u0103 calcul de adres\u0103 efectiv\u0103 (salturi condi\u021bionate, RET etc.)"))),(0,n.yg)("li",{parentName:"ul"},"bitul ","[1]"," - separ\u0103 instruc\u021biunile care au 1 operand de cele cu 2 operanzi:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"0 - un operand"),(0,n.yg)("li",{parentName:"ul"},"1 - doi operanzi"))),(0,n.yg)("li",{parentName:"ul"},"bitul ","[2]"," - separ\u0103 instruc\u021biunile cu operand imediat de cele f\u0103r\u0103 operand imediat:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"0 - f\u0103r\u0103 operand imediat"),(0,n.yg)("li",{parentName:"ul"},"1 - cu operand imediat"))),(0,n.yg)("li",{parentName:"ul"},"bitul ","[3]"," - separ\u0103 instruc\u021biunile de transfer de date/control de celelalte:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"0 - transfer de date/control (MOV, PUSH, CALL etc.) sau care nu salveaz\u0103 rezultatul (CMP, TEST)"),(0,n.yg)("li",{parentName:"ul"},"1 - instruc\u021biuni aritmetico-logice cu salvarea rezultatului, salturi condi\u021bionate"))),(0,n.yg)("li",{parentName:"ul"},"bi\u021bii ","[4][5]","[6]"," - cod opera\u021bie"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"d")," - pentru instruc\u021biunile cu doi operanzi, folosit pentru a \u0219ti care e primul \u0219i care e al doilea dintre cele dou\u0103 c\xe2mpuri REG \u0219i RM din codul instruc\u021biunii:",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"0 - RM = RM op REG"),(0,n.yg)("li",{parentName:"ul"},"1 - REG = REG op RM"))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"MOD")," - modul de calcul al adresei efective (4 moduri - 2 bi\u021bi)"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"REG")," - indexul registrului care con\u021bine unul dintre operanzi"),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("strong",{parentName:"li"},"RM")," - indexul registrului sau a adresei de memorie care con\u021bine unul dintre operanzi")),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Instruc\u021biune"),(0,n.yg)("th",{parentName:"tr",align:null},"Func\u021bie"),(0,n.yg)("th",{parentName:"tr",align:null},"Cod RI","[0:6]"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"INC"),(0,n.yg)("td",{parentName:"tr",align:null},"op = op + 1"),(0,n.yg)("td",{parentName:"tr",align:null},"0001 000")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"DEC"),(0,n.yg)("td",{parentName:"tr",align:null},"op = op - 1"),(0,n.yg)("td",{parentName:"tr",align:null},"0001 001")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"NEG"),(0,n.yg)("td",{parentName:"tr",align:null},"op = -op"),(0,n.yg)("td",{parentName:"tr",align:null},"0001 010")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"NOT"),(0,n.yg)("td",{parentName:"tr",align:null},"op = ~op"),(0,n.yg)("td",{parentName:"tr",align:null},"0001 011")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"SHL/SAL"),(0,n.yg)("td",{parentName:"tr",align:null},"op = op << 1"),(0,n.yg)("td",{parentName:"tr",align:null},"0001 100")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"SHR"),(0,n.yg)("td",{parentName:"tr",align:null},"op = op >> 1"),(0,n.yg)("td",{parentName:"tr",align:null},"0001 101")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"SAR"),(0,n.yg)("td",{parentName:"tr",align:null},"op = op >>> 1"),(0,n.yg)("td",{parentName:"tr",align:null},"0001 110")))),(0,n.yg)("p",null,(0,n.yg)("em",{parentName:"p"},"Table: Instruc\u021biuni aritmetico-logice cu un operand")),(0,n.yg)("p",null,"De exemplu, pentru instruc\u021biunea ",(0,n.yg)("inlineCode",{parentName:"p"},"INC RA")," grupul este cel al opera\u021biilor cu calcul de adres\u0103 efectiv\u0103 (RI","[0]"," = 0), cu un singur operand (RI","[1]"," = 0), f\u0103r\u0103 operand imediat (RI","[2]"," = 0) \u0219i cu salvarea rezultatului (RI","[3]"," = 1)."),(0,n.yg)("p",null,"Pentru orice procesor, fiecare instruc\u021biune definit\u0103 \xeen arhitectura setului s\u0103u de instruc\u021biuni, are un anumit ",(0,n.yg)("strong",{parentName:"p"},"cod unic dup\u0103 care este identificat\u0103"),". Atunci c\xe2nd se stocheaz\u0103 o instruc\u021biune care lucreaz\u0103 cu cel pu\u021bin un operand, nu este suficient s\u0103 avem doar codul s\u0103u (care indic\u0103 ce ac\u021biune trebuie efectuat\u0103), ci trebuie s\u0103 avem \u0219i ni\u0219te bi\u021bi care s\u0103 ne indice de unde lu\u0103m operanzii, a\u0219a cum este ilustrat \u0219i \xeen imaginea de mai jos."),(0,n.yg)("p",null,"Dac\u0103 MOD = 2'b11 (adresare direct\u0103 la registru) \u0219i instruc\u021biunea are un singur operand, acesta este pus \xeen RM."),(0,n.yg)("p",null,"Se poate observa c\u0103 \xeen cadrul unora din grupurile de opera\u021bii au r\u0103mas codific\u0103ri nefolosite pe bi\u021bii 4:6. Dac\u0103 se extinde setul de instruc\u021biuni cu noi opera\u021bii (",(0,n.yg)("strong",{parentName:"p"},"vede\u021bi \xeen curs!"),"), atunci codul acestora poate fi unul din cele nefolosite (at\xe2ta timp c\xe2t se \xeencadreaz\u0103 \xeen acel grup)."),(0,n.yg)("p",null,"Exemplu de calcul cod opera\u021bie pentru instruc\u021biune ",(0,n.yg)("inlineCode",{parentName:"p"},"DEC RB"),":"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"[0]"," = 0 - cu calcul de adres\u0103 efectiv\u0103"),(0,n.yg)("li",{parentName:"ul"},"[1]"," = 0 - un operand"),(0,n.yg)("li",{parentName:"ul"},"[2]"," = 0 - f\u0103r\u0103 operand imediat"),(0,n.yg)("li",{parentName:"ul"},"[3]"," = 1 - opera\u021bie aritmetic\u0103 cu salvarea rezultatului"),(0,n.yg)("li",{parentName:"ul"},"[4,5,6]"," = ","[0,0,1]"," - codul dat opera\u021biei (stabilit de arhitectur\u0103)"),(0,n.yg)("li",{parentName:"ul"},"[7]"," = 0/1 - nu conteaz\u0103, \xeel putem pune 0 sau 1"),(0,n.yg)("li",{parentName:"ul"},"[8,9]"," = ","[1,1]"," - modul de adresare (direct\u0103 la registru)"),(0,n.yg)("li",{parentName:"ul"},"[10,11,12]"," = ","[0,0,0]"," - nu folosim REG, deci nu conteaz\u0103 ce punem"),(0,n.yg)("li",{parentName:"ul"},"[13,14,15]"," = ","[0,0,1]"," - indexul registrului RB \xeen bancul de registre")),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"15"),(0,n.yg)("th",{parentName:"tr",align:null},"14"),(0,n.yg)("th",{parentName:"tr",align:null},"13"),(0,n.yg)("th",{parentName:"tr",align:null},"12"),(0,n.yg)("th",{parentName:"tr",align:null},"11"),(0,n.yg)("th",{parentName:"tr",align:null},"10"),(0,n.yg)("th",{parentName:"tr",align:null},"9"),(0,n.yg)("th",{parentName:"tr",align:null},"8"),(0,n.yg)("th",{parentName:"tr",align:null},"7"),(0,n.yg)("th",{parentName:"tr",align:null},"6"),(0,n.yg)("th",{parentName:"tr",align:null},"5"),(0,n.yg)("th",{parentName:"tr",align:null},"4"),(0,n.yg)("th",{parentName:"tr",align:null},"3"),(0,n.yg)("th",{parentName:"tr",align:null},"2"),(0,n.yg)("th",{parentName:"tr",align:null},"1"),(0,n.yg)("th",{parentName:"tr",align:null},"0"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0")))),(0,n.yg)("p",null,"Instruc\u021biunile care vor fi implementate \xeen acest laborator se reg\u0103sesc \xeen tabelul de mai jos. Acestea sunt instruc\u021biuni aritmetice \u0219i logice cu doi operanzi ale c\u0103ror valori sunt \xeen registrele generale \u0219i fie pun un rezultat \xeenapoi \xeen registrul destina\u021bie, fie nu stocheaz\u0103 rezultatul ci doar seteaz\u0103 indicatorii de condi\u021bie (CMP \u0219i TEST)."),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"Instruc\u021biune"),(0,n.yg)("th",{parentName:"tr",align:null},"Func\u021bie"),(0,n.yg)("th",{parentName:"tr",align:null},"Cod RI","[0:6]"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"ADD"),(0,n.yg)("td",{parentName:"tr",align:null},"op",(0,n.yg)("sub",null,"dst")," = op",(0,n.yg)("sub",null,"dst")," + op",(0,n.yg)("sub",null,"src")),(0,n.yg)("td",{parentName:"tr",align:null},"0101000")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"ADC"),(0,n.yg)("td",{parentName:"tr",align:null},"op",(0,n.yg)("sub",null,"dst")," = op",(0,n.yg)("sub",null,"dst")," + op",(0,n.yg)("sub",null,"src")," + carry"),(0,n.yg)("td",{parentName:"tr",align:null},"0101001")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"SUB"),(0,n.yg)("td",{parentName:"tr",align:null},"op",(0,n.yg)("sub",null,"dst")," = op",(0,n.yg)("sub",null,"dst")," - op",(0,n.yg)("sub",null,"src")),(0,n.yg)("td",{parentName:"tr",align:null},"0101010")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"SBB"),(0,n.yg)("td",{parentName:"tr",align:null},"op",(0,n.yg)("sub",null,"dst")," = op",(0,n.yg)("sub",null,"dst")," - op",(0,n.yg)("sub",null,"src")," - carry"),(0,n.yg)("td",{parentName:"tr",align:null},"0101011")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"AND"),(0,n.yg)("td",{parentName:"tr",align:null},"op",(0,n.yg)("sub",null,"dst")," = op",(0,n.yg)("sub",null,"dst")," & op",(0,n.yg)("sub",null,"src")),(0,n.yg)("td",{parentName:"tr",align:null},"0101100")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"OR"),(0,n.yg)("td",{parentName:"tr",align:null},"op",(0,n.yg)("sub",null,"dst")," = op",(0,n.yg)("sub",null,"dst")," ","|"," op",(0,n.yg)("sub",null,"src")),(0,n.yg)("td",{parentName:"tr",align:null},"0101101")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"XOR"),(0,n.yg)("td",{parentName:"tr",align:null},"op",(0,n.yg)("sub",null,"dst")," = op",(0,n.yg)("sub",null,"dst")," ^ op",(0,n.yg)("sub",null,"src")),(0,n.yg)("td",{parentName:"tr",align:null},"0101110")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"CMP"),(0,n.yg)("td",{parentName:"tr",align:null},"op",(0,n.yg)("sub",null,"dst")," - op",(0,n.yg)("sub",null,"src"),", f\u0103r\u0103 stocare rezultat, doar setare indicatori"),(0,n.yg)("td",{parentName:"tr",align:null},"0100010")),(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"TEST"),(0,n.yg)("td",{parentName:"tr",align:null},"op",(0,n.yg)("sub",null,"dst")," & op",(0,n.yg)("sub",null,"src"),", f\u0103r\u0103 stocare rezultat, doar setare indicatori"),(0,n.yg)("td",{parentName:"tr",align:null},"0100100")))),(0,n.yg)("p",null,(0,n.yg)("em",{parentName:"p"},"Table: Instruc\u021biuni aritmetico-logice cu doi operanzi")),(0,n.yg)("p",null,"Pentru ",(0,n.yg)("strong",{parentName:"p"},"decodificarea")," instruc\u021biunilor din acest laborator trebuie sa identific\u0103m at\xe2t grupul instruc\u021biunilor aritmetico-logice cu doi operanzi, f\u0103r\u0103 operand imediat \u0219i care stocheaz\u0103 rezultatul (",(0,n.yg)("strong",{parentName:"p"},"RI",(0,n.yg)("sub",null,"0..3")," = 0101"),") c\xe2t \u0219i cele care nu stocheaz\u0103 rezultatul (",(0,n.yg)("strong",{parentName:"p"},"RI",(0,n.yg)("sub",null,"0..3")," = 0100"),")."),(0,n.yg)("h2",{id:"adresarea-direct\u0103-la-registru"},"Adresarea direct\u0103 la registru"),(0,n.yg)("p",null,"Operanzii se g\u0103sesc \xeen registrele specificate de c\xe2mpurile REG \u0219i RM. Pentru a selecta ordinea operanzilor din aceste dou\u0103 c\xe2mpuri, trebuie s\u0103 \u021binem cont de valoarea din bitul ",(0,n.yg)("strong",{parentName:"p"},"d"),". Vom folosi adresarea direct\u0103 la registru (c\xe2mpul mod trebuie s\u0103 con\u021bin\u0103 valoarea 2'b11), a\u0219a cum se observ\u0103 \xeen imaginea de mai jos."),(0,n.yg)("p",null,(0,n.yg)("img",{alt:"Adresarea direct\u0103 la registru pentru instruc\u021biuni cu doi operanzi",src:t(9961).A,width:"897",height:"632"})),(0,n.yg)("p",null,(0,n.yg)("em",{parentName:"p"},"Figure: Adresarea direct\u0103 la registru pentru instruc\u021biuni cu doi operanzi")),(0,n.yg)("p",null,"Instruc\u021biunea ",(0,n.yg)("inlineCode",{parentName:"p"},"AND RA, RB")," efectueaz\u0103 ",(0,n.yg)("inlineCode",{parentName:"p"},"\u0218I")," logic \xeentre cei doi operanzi \u0219i pune rezultatul \xeen registrul destina\u021bie (",(0,n.yg)("inlineCode",{parentName:"p"},"RA"),"). Un exemplu de calcul al codului opera\u021biei se reg\u0103se\u0219te mai jos:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"[0]"," = 0 - cu calcul de adres\u0103 efectiv\u0103"),(0,n.yg)("li",{parentName:"ul"},"[1]"," = 1 - doi operanzi"),(0,n.yg)("li",{parentName:"ul"},"[2]"," = 0 - f\u0103r\u0103 operand imediat"),(0,n.yg)("li",{parentName:"ul"},"[3]"," = 1 - opera\u021bie aritmetic\u0103 cu salvarea rezultatului"),(0,n.yg)("li",{parentName:"ul"},"[4,5,6]"," = ","[1,0,0]"," - codul dat opera\u021biei (stabilit de arhitectur\u0103)"),(0,n.yg)("li",{parentName:"ul"},"[7]"," - selecteaz\u0103 operandul destina\u021bie. Pentru exemplul acesta vom considera c\u0103 acest bit ia valoarea 1 (\u021binem cont c\u0103 destina\u021bia va fi registrul ",(0,n.yg)("inlineCode",{parentName:"li"},"RA"),"):",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"1: REG = REG ",(0,n.yg)("inlineCode",{parentName:"li"},"AND")," RM"))),(0,n.yg)("li",{parentName:"ul"},"[8,9]"," = ","[1,1]"," - modul de adresare (folosim adresarea direct\u0103 la registru)"),(0,n.yg)("li",{parentName:"ul"},"[10,11,12]"," = ","[0,0,0]"," - indexul registrului ",(0,n.yg)("inlineCode",{parentName:"li"},"RA")," \xeen bancul de registre"),(0,n.yg)("li",{parentName:"ul"},"[13,14,15]"," = ","[0,0,1]"," - indexul registrului ",(0,n.yg)("inlineCode",{parentName:"li"},"RB")," \xeen bancul de registre")),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"15"),(0,n.yg)("th",{parentName:"tr",align:null},"14"),(0,n.yg)("th",{parentName:"tr",align:null},"13"),(0,n.yg)("th",{parentName:"tr",align:null},"12"),(0,n.yg)("th",{parentName:"tr",align:null},"11"),(0,n.yg)("th",{parentName:"tr",align:null},"10"),(0,n.yg)("th",{parentName:"tr",align:null},"9"),(0,n.yg)("th",{parentName:"tr",align:null},"8"),(0,n.yg)("th",{parentName:"tr",align:null},"7"),(0,n.yg)("th",{parentName:"tr",align:null},"6"),(0,n.yg)("th",{parentName:"tr",align:null},"5"),(0,n.yg)("th",{parentName:"tr",align:null},"4"),(0,n.yg)("th",{parentName:"tr",align:null},"3"),(0,n.yg)("th",{parentName:"tr",align:null},"2"),(0,n.yg)("th",{parentName:"tr",align:null},"1"),(0,n.yg)("th",{parentName:"tr",align:null},"0"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0")))),(0,n.yg)("p",null,"O alt\u0103 variant\u0103 pentru codificarea acestei opera\u021bii apare \xeen urma modificarii bitului ","[7]"," astfel:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"[7]"," - selecteaz\u0103 operandul destina\u021bie. Pentru exemplul acesta vom considera c\u0103 acest bit ia valoarea 0 (\u021binem cont c\u0103 destina\u021bia va fi registrul ",(0,n.yg)("inlineCode",{parentName:"li"},"RA"),"):",(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},"0: RM = REG ",(0,n.yg)("inlineCode",{parentName:"li"},"AND")," RM"))),(0,n.yg)("li",{parentName:"ul"},"[10,11,12]"," = ","[0,0,1]"," - indexul registrului ",(0,n.yg)("inlineCode",{parentName:"li"},"RB")," \xeen bancul de registre"),(0,n.yg)("li",{parentName:"ul"},"[13,14,15]"," = ","[0,0,0]"," - indexul registrului ",(0,n.yg)("inlineCode",{parentName:"li"},"RA")," \xeen bancul de registre")),(0,n.yg)("table",null,(0,n.yg)("thead",{parentName:"table"},(0,n.yg)("tr",{parentName:"thead"},(0,n.yg)("th",{parentName:"tr",align:null},"15"),(0,n.yg)("th",{parentName:"tr",align:null},"14"),(0,n.yg)("th",{parentName:"tr",align:null},"13"),(0,n.yg)("th",{parentName:"tr",align:null},"12"),(0,n.yg)("th",{parentName:"tr",align:null},"11"),(0,n.yg)("th",{parentName:"tr",align:null},"10"),(0,n.yg)("th",{parentName:"tr",align:null},"9"),(0,n.yg)("th",{parentName:"tr",align:null},"8"),(0,n.yg)("th",{parentName:"tr",align:null},"7"),(0,n.yg)("th",{parentName:"tr",align:null},"6"),(0,n.yg)("th",{parentName:"tr",align:null},"5"),(0,n.yg)("th",{parentName:"tr",align:null},"4"),(0,n.yg)("th",{parentName:"tr",align:null},"3"),(0,n.yg)("th",{parentName:"tr",align:null},"2"),(0,n.yg)("th",{parentName:"tr",align:null},"1"),(0,n.yg)("th",{parentName:"tr",align:null},"0"))),(0,n.yg)("tbody",{parentName:"table"},(0,n.yg)("tr",{parentName:"tbody"},(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0"),(0,n.yg)("td",{parentName:"tr",align:null},"1"),(0,n.yg)("td",{parentName:"tr",align:null},"0")))),(0,n.yg)("p",null,"Fi\u0219ierul care con\u021bine cheat-sheet-ul cu ajutorul c\u0103ruia pute\u021bi decodifica orice instruc\u021biune poate fi g\u0103sit ",(0,n.yg)("a",{target:"_blank",href:t(1620).A},"aici")),(0,n.yg)("p",null,"Fi\u0219ierul care descrie intreaga arhitectur\u0103 este aici: ",(0,n.yg)("a",{target:"_blank",href:t(5982).A},"Biblia.pdf")))}m.isMDXComponent=!0},1620:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/files/cheat-sheet-226fa97d400a0447becaa2207c89817d.pdf"},5680:(e,a,t)=>{t.d(a,{xA:()=>c,yg:()=>s});var r=t(6540);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function l(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter(function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable})),t.push.apply(t,r)}return t}function i(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?l(Object(t),!0).forEach(function(a){n(e,a,t[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach(function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})}return e}function u(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var g=r.createContext({}),p=function(e){var a=r.useContext(g),t=a;return e&&(t="function"==typeof e?e(a):i(i({},a),e)),t},c=function(e){var a=p(e.components);return r.createElement(g.Provider,{value:a},e.children)},o="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},d=r.forwardRef(function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,g=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),o=p(t),d=n,s=o["".concat(g,".").concat(d)]||o[d]||m[d]||l;return t?r.createElement(s,i(i({ref:a},c),{},{components:t})):r.createElement(s,i({ref:a},c))});function s(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,i=new Array(l);i[0]=d;var u={};for(var g in a)hasOwnProperty.call(a,g)&&(u[g]=a[g]);u.originalType=e,u[o]="string"==typeof e?e:n,i[1]=u;for(var p=2;p<l;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5982:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/files/Biblia-981e8842f01bd283060d86e02121fc49.pdf"},7991:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/format-instructiune-17eb23b9890b9281b68036a30eb25c65.png"},9961:(e,a,t)=>{t.d(a,{A:()=>r});const r=t.p+"assets/images/adresare-directa-registru-040a94415a88c61b94614ea19f796d7b.png"}}]);