"use strict";(globalThis.webpackChunkcomputer_architecture=globalThis.webpackChunkcomputer_architecture||[]).push([[7714],{488:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>m});var t=n(8168),r=(n(6540),n(5680));const i={},o="Project Guidelines and Research Resources",l={unversionedId:"Evaluare/Teme/Proiecte AB 2025/README",id:"Evaluare/Teme/Proiecte AB 2025/README",title:"Project Guidelines and Research Resources",description:"---",source:"@site/docs/Evaluare/Teme/Proiecte AB 2025/README.md",sourceDirName:"Evaluare/Teme/Proiecte AB 2025",slug:"/Evaluare/Teme/Proiecte AB 2025/",permalink:"/computer-architecture/Evaluare/Teme/Proiecte AB 2025/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"sidebar",previous:{title:"Tema: Generator semnal PWM",permalink:"/computer-architecture/Evaluare/Teme/PWMGen AA 2025/"},next:{title:"Examen AB",permalink:"/computer-architecture/Evaluare/"}},p={},m=[{value:"Project Structure",id:"project-structure",level:2},{value:"1. Documentation Phase (Literature Review &amp; Problem Analysis)",id:"1-documentation-phase-literature-review--problem-analysis",level:3},{value:"2. Implementation Phase (HDL/HCL Development)",id:"2-implementation-phase-hdlhcl-development",level:3},{value:"3. Evaluation Phase (FPGA Synthesis &amp; Performance Analysis)",id:"3-evaluation-phase-fpga-synthesis--performance-analysis",level:3},{value:"Project Topics &amp; Base Research Articles",id:"project-topics--base-research-articles",level:2},{value:"1. KALMAN ALL THE WAY - Implementation of Multiple Types of Kalman Filters",id:"1-kalman-all-the-way---implementation-of-multiple-types-of-kalman-filters",level:3},{value:"2. Optical Flow",id:"2-optical-flow",level:3},{value:"3. Clustering of Point Clouds",id:"3-clustering-of-point-clouds",level:3},{value:"4. Motion Distortion Effect",id:"4-motion-distortion-effect",level:3},{value:"5. Post-Quantum Algorithms (e.g., CRYSTALS)",id:"5-post-quantum-algorithms-eg-crystals",level:3},{value:"6. Random Number Generation (NIST Compliant)",id:"6-random-number-generation-nist-compliant",level:3},{value:"7. Quantization of AI Models on FPGA",id:"7-quantization-of-ai-models-on-fpga",level:3},{value:"8. Large Number Representation System on FPGA/CUDA",id:"8-large-number-representation-system-on-fpgacuda",level:3},{value:"9. Point Cloud-RGB Calibration",id:"9-point-cloud-rgb-calibration",level:3},{value:"10. SLAM (Simultaneous Localization and Mapping)",id:"10-slam-simultaneous-localization-and-mapping",level:3},{value:"11. Ground Plane Detection and Segmentation",id:"11-ground-plane-detection-and-segmentation",level:3},{value:"12. 3D Object Detection from LiDAR Point Clouds",id:"12-3d-object-detection-from-lidar-point-clouds",level:3},{value:"General Guidelines for All Projects",id:"general-guidelines-for-all-projects",level:2},{value:"Documentation Phase Tips",id:"documentation-phase-tips",level:3},{value:"Implementation Phase Tips",id:"implementation-phase-tips",level:3},{value:"Evaluation Phase Tips",id:"evaluation-phase-tips",level:3},{value:"FPGA Tools and Platforms",id:"fpga-tools-and-platforms",level:3},{value:"Recommended Development Flow",id:"recommended-development-flow",level:3},{value:"Grading Criteria (Approximate)",id:"grading-criteria-approximate",level:3},{value:"Important Deadlines",id:"important-deadlines",level:2},{value:"Additional Resources",id:"additional-resources",level:2},{value:"Online Courses and Tutorials",id:"online-courses-and-tutorials",level:3},{value:"Useful Websites",id:"useful-websites",level:3},{value:"Books",id:"books",level:3}],s={toc:m},g="wrapper";function u({components:e,...a}){return(0,r.yg)(g,(0,t.A)({},s,a,{components:e,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"project-guidelines-and-research-resources"},"Project Guidelines and Research Resources"),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"project-structure"},"Project Structure"),(0,r.yg)("p",null,"Your project consists of ",(0,r.yg)("strong",{parentName:"p"},"three main deliverables"),", each contributing to the final grade:"),(0,r.yg)("h3",{id:"1-documentation-phase-literature-review--problem-analysis"},"1. Documentation Phase (Literature Review & Problem Analysis)"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Objective:")," Research and understand the state-of-the-art solutions to your assigned problem"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Requirements:"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Search and analyze research articles from academic databases (IEEE Xplore, ACM, arXiv, etc.)"),(0,r.yg)("li",{parentName:"ul"},"Present the problem statement clearly"),(0,r.yg)("li",{parentName:"ul"},"Describe existing solutions and their trade-offs"),(0,r.yg)("li",{parentName:"ul"},"Identify the approach you will implement"),(0,r.yg)("li",{parentName:"ul"},"Include architectural considerations for FPGA/HDL implementation"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Deliverables:"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Written report (10-15 pages)"),(0,r.yg)("li",{parentName:"ul"},"Presentation slides"),(0,r.yg)("li",{parentName:"ul"},"Bibliography with at least 10 research papers")))),(0,r.yg)("h3",{id:"2-implementation-phase-hdlhcl-development"},"2. Implementation Phase (HDL/HCL Development)"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Objective:")," Implement your chosen algorithm in hardware"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Requirements:"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Create a GitHub repository for your project"),(0,r.yg)("li",{parentName:"ul"},"Implement using Hardware Description Language (HDL) such as:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"VHDL"),(0,r.yg)("li",{parentName:"ul"},"Verilog"),(0,r.yg)("li",{parentName:"ul"},"SystemVerilog"))),(0,r.yg)("li",{parentName:"ul"},"OR Hardware Construction Language (HCL) such as:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Chisel"),(0,r.yg)("li",{parentName:"ul"},"PyMTL"),(0,r.yg)("li",{parentName:"ul"},"Bluespec"),(0,r.yg)("li",{parentName:"ul"},"RHDL"),(0,r.yg)("li",{parentName:"ul"},"HLS (C/C++ to HDL)"))),(0,r.yg)("li",{parentName:"ul"},"Include testbenches for verification"),(0,r.yg)("li",{parentName:"ul"},"Document your code thoroughly"),(0,r.yg)("li",{parentName:"ul"},"Provide build/synthesis scripts"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Deliverables:"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"GitHub repository with complete source code"),(0,r.yg)("li",{parentName:"ul"},"README with build instructions"),(0,r.yg)("li",{parentName:"ul"},"Test results and waveforms")))),(0,r.yg)("h3",{id:"3-evaluation-phase-fpga-synthesis--performance-analysis"},"3. Evaluation Phase (FPGA Synthesis & Performance Analysis)"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Objective:")," Synthesize and evaluate your design on FPGA hardware"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Requirements:"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Synthesize your design using FPGA tools (Vivado, Yosys, etc.)"),(0,r.yg)("li",{parentName:"ul"},"Report resource utilization:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Number of LUTs (Look-Up Tables)"),(0,r.yg)("li",{parentName:"ul"},"Number of DSP blocks used"),(0,r.yg)("li",{parentName:"ul"},"Block RAM utilization"),(0,r.yg)("li",{parentName:"ul"},"Flip-flops"))),(0,r.yg)("li",{parentName:"ul"},"Analyze performance metrics:",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Maximum clock frequency"),(0,r.yg)("li",{parentName:"ul"},"Latency"),(0,r.yg)("li",{parentName:"ul"},"Throughput"),(0,r.yg)("li",{parentName:"ul"},"Power consumption (if available)"))),(0,r.yg)("li",{parentName:"ul"},"Compare with software baseline (CPU/GPU implementation)"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Deliverables:"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Synthesis reports"),(0,r.yg)("li",{parentName:"ul"},"Performance analysis document"),(0,r.yg)("li",{parentName:"ul"},"Final presentation")))),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"project-topics--base-research-articles"},"Project Topics & Base Research Articles"),(0,r.yg)("h3",{id:"1-kalman-all-the-way---implementation-of-multiple-types-of-kalman-filters"},"1. KALMAN ALL THE WAY - Implementation of Multiple Types of Kalman Filters"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement various Kalman filter variants (Standard, Extended, Unscented) in hardware for real-time sensor fusion applications."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Efficient Mapping of a Kalman Filter into an FPGA using Taylor Expansion"),(0,r.yg)("br",{parentName:"p"}),"\n",'Liu, Yang, Christos-Savvas Bouganis, and Peter YK Cheung. "Efficient mapping of a Kalman filter into an FPGA using Taylor expansion." 2007 International Conference on Field Programmable Logic and Applications. IEEE, 2007.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"FPGA implementation of multi-dimensional Kalman filter for object tracking and motion detection"),(0,r.yg)("br",{parentName:"p"}),"\n",'Babu, Praveenkumar, and Eswaran Parthasarathy. "FPGA implementation of multi-dimensional Kalman filter for object tracking and motion detection." Engineering Science and Technology, an International Journal 33 (2022): 101084.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Parameterizable FPGA-based Kalman Filter Coprocessor Using Piecewise Affine Modeling"),(0,r.yg)("br",{parentName:"p"}),"\n",'Mills, Aaron, Phillip H. Jones, and Joseph Zambreno. "Parameterizable FPGA-based Kalman filter coprocessor using piecewise affine modeling." 2016 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW). IEEE, 2016.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"FPGA-based unscented Kalman filter for target tracking"),(0,r.yg)("br",{parentName:"p"}),"\n",'AlShabi, Mohammad A., and Talal Bonny. "FPGA-based unscented Kalman filter for target tracking." Signal Processing, Sensor/Information Fusion, and Target Recognition XXXI. Vol. 12122. SPIE, 2022.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"An FPGA Implementation for a Kalman Filter with Application to Mobile Robotics"),(0,r.yg)("br",{parentName:"p"}),"\n",'Bonato, Vanderlei, et al. "An fpga implementation for a kalman filter with application to mobile robotics." 2007 international symposium on industrial embedded systems. IEEE, 2007.'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Start with basic Linear Kalman Filter"),(0,r.yg)("li",{parentName:"ul"},"Add Extended Kalman Filter (EKF) for nonlinear systems"),(0,r.yg)("li",{parentName:"ul"},"Implement Unscented Kalman Filter (UKF) if time permits"),(0,r.yg)("li",{parentName:"ul"},"Focus on fixed-point arithmetic optimization"),(0,r.yg)("li",{parentName:"ul"},"Use parallel processing for matrix operations")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"2-optical-flow"},"2. Optical Flow"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement real-time optical flow algorithms (Lucas-Kanade, Horn-Schunck) for motion estimation in video sequences."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Real-Time Efficient FPGA Implementation of the Multi-Scale Lucas-Kanade and Horn-Schunck Optical Flow Algorithms for a 4K Video Stream"),(0,r.yg)("br",{parentName:"p"}),"\n",'Blachut, Krzysztof, and Tomasz Kryjak. "Real-time efficient fpga implementation of the multi-scale lucas-kanade and horn-schunck optical flow algorithms for a 4k video stream." Sensors 22.13 (2022): 5017.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Efficient Hardware Implementation of the Horn-Schunck Algorithm for Embedded Optical Flow Sensor"),(0,r.yg)("br",{parentName:"p"}),"\n",'Komorkiewicz, Mateusz, Tomasz Kryjak, and Marek Gorgon. "Efficient hardware implementation of the Horn-Schunck algorithm for high-resolution real-time dense optical flow sensor." Sensors 14.2 (2014): 2860-2891.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Harms: A hardware acceleration architecture for real-time event-based optical flow"),(0,r.yg)("br",{parentName:"p"}),"\n",'Stumpp, Daniel C., et al. "Harms: A hardware acceleration architecture for real-time event-based optical flow." IEEE Access 10 (2022): 58181-58198.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Flexible FPGA Acceleration Architecture for Real-Time Neuromorphic Optical Flow"),(0,r.yg)("br",{parentName:"p"}),"\n","Silbernagel, Linus. Flexible FPGA Acceleration Architecture for Real-Time Neuromorphic Optical Flow. MS thesis. University of Pittsburgh, 2024.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"FPGA-based implementation of optical flow algorithm"),(0,r.yg)("br",{parentName:"p"}),"\n",'Allaoui, R., et al. "FPGA-based implementation of optical flow algorithm." 2017 international conference on electrical and information technologies (ICEIT). IEEE, 2017.'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Begin with Horn-Schunck (easier to parallelize)"),(0,r.yg)("li",{parentName:"ul"},"Implement multi-scale pyramidal approach for large displacements"),(0,r.yg)("li",{parentName:"ul"},"Pipeline image derivatives computation"),(0,r.yg)("li",{parentName:"ul"},"Extra: Use fixed-point arithmetic (12-16 bits)")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"3-clustering-of-point-clouds"},"3. Clustering of Point Clouds"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement clustering algorithms (DBSCAN, Euclidean clustering) for 3D LiDAR point cloud segmentation."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Arc 2014: A multidimensional fpga-based parallel dbscan architecture"),(0,r.yg)("br",{parentName:"p"}),"\n",'Scicluna, Neil, and Christos-Savvas Bouganis. "Arc 2014: A multidimensional fpga-based parallel dbscan architecture." ACM Transactions on Reconfigurable Technology and Systems (TRETS) 9.1 (2015): 1-15.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Real-Time LiDAR Point-Cloud Moving Object Segmentation for Autonomous Vehicles"),(0,r.yg)("br",{parentName:"p"}),"\n",'Xie, Xing, Haowen Wei, and Yongjie Yang. "Real-time LiDAR point-cloud moving object segmentation for autonomous driving." Sensors 23.1 (2023): 547.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Stream-Based Ground Segmentation for Real-Time LiDAR Point Cloud Processing on FPGA"),(0,r.yg)("br",{parentName:"p"}),"\n",'Zhang, Xiao, et al. "Stream-Based Ground Segmentation for Real-Time LiDAR Point Cloud Processing on FPGA." arXiv preprint arXiv:2408.10410 (2024).')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Real-Time Fast Channel Clustering for LiDAR Point Cloud"),(0,r.yg)("br",{parentName:"p"}),"\n",'Zhang, Xiao, and Xinming Huang. "Real-time fast channel clustering for LiDAR point cloud." IEEE Transactions on Circuits and Systems II: Express Briefs 69.10 (2022): 4103-4107.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"An Efficient FPGA Accelerator for Point Cloud Sparse Convolutional Networks"),(0,r.yg)("br",{parentName:"p"}),"\n",'Wang, Zilun, et al. "An efficient fpga accelerator for point cloud." 2022 IEEE 35th International System-on-Chip Conference (SOCC). IEEE, 2022.'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Start with Euclidean clustering (simpler than DBSCAN)"),(0,r.yg)("li",{parentName:"ul"},"Use K-d tree or octree spatial indexing"),(0,r.yg)("li",{parentName:"ul"},"Implement streaming architecture for real-time processing"),(0,r.yg)("li",{parentName:"ul"},"Support variable point cloud sizes"),(0,r.yg)("li",{parentName:"ul"},"Optimize memory access patterns")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"4-motion-distortion-effect"},"4. Motion Distortion Effect"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement LiDAR/camera motion distortion correction for moving platforms using IMU data."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"De-Skewing LiDAR Scan for Refinement of Local Mapping"),(0,r.yg)("br",{parentName:"p"}),"\n",'He, Lei, Zhe Jin, and Zhenhai Gao. "De-skewing lidar scan for refinement of local mapping." Sensors 20.7 (2020): 1846.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Correcting Motion Distortion for LIDAR HD-Map Localization"),(0,r.yg)("br",{parentName:"p"}),"\n",'McDermott, Matthew, and Jason Rife. "Correcting motion distortion for LIDAR scan-to-Map Registration." IEEE Robotics and Automation Letters 9.2 (2023): 1516-1523.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"3d lidar-imu calibration based on upsampled preintegrated measurements for motion distortion correction"),(0,r.yg)("br",{parentName:"p"}),"\n",'Le Gentil, Cedric, Teresa Vidal-Calleja, and Shoudong Huang. "3d lidar-imu calibration based on upsampled preintegrated measurements for motion distortion correction." 2018 IEEE International Conference on Robotics and Automation (ICRA). IEEE, 2018.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"A robust adaptive unscented kalman filter for floating doppler wind-lidar motion correction"),(0,r.yg)("br",{parentName:"p"}),"\n",'Salcedo-Bosch, Andreu, Francesc Rocadenbosch, and Joaquim Sospedra. "A robust adaptive unscented kalman filter for floating doppler wind-lidar motion correction." Remote Sensing 13.20 (2021): 4167.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Increased Accuracy For Fast Moving LiDARs: Correction of Motion Distortion"),(0,r.yg)("br",{parentName:"p"}),"\n",'Renzler, Tobias, et al. "Increased accuracy for fast moving LiDARS: Correction of distorted point clouds." 2020 IEEE international instrumentation and measurement technology conference (I2MTC). IEEE, 2020.'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Implement linear interpolation for motion compensation"),(0,r.yg)("li",{parentName:"ul"},"Use IMU integration for pose estimation"),(0,r.yg)("li",{parentName:"ul"},"Support rolling shutter correction"),(0,r.yg)("li",{parentName:"ul"},"Process point-by-point or scan-line-by-line"),(0,r.yg)("li",{parentName:"ul"},"Use quaternion-based rotation interpolation")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"5-post-quantum-algorithms-eg-crystals"},"5. Post-Quantum Algorithms (e.g., CRYSTALS)"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement post-quantum cryptographic algorithms (CRYSTALS-Kyber, CRYSTALS-Dilithium) resistant to quantum computer attacks."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"High-speed hardware architectures and FPGA benchmarking of CRYSTALS-Kyber, NTRU, and Saber"),(0,r.yg)("br",{parentName:"p"}),"\n",'Dang, Viet Ba, Kamyar Mohajerani, and Kris Gaj. "High-speed hardware architectures and FPGA benchmarking of CRYSTALS-Kyber, NTRU, and Saber." IEEE transactions on computers 72.2 (2022): 306-320.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Hardware Acceleration for High-Volume Operations of CRYSTALS-Kyber and CRYSTALS-Dilithium"),(0,r.yg)("br",{parentName:"p"}),"\n",'Carril, Xavier, et al. "Hardware acceleration for high-volume operations of CRYSTALS-kyber and CRYSTALS-dilithium." ACM Transactions on Reconfigurable Technology and Systems 17.3 (2024): 1-26.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Efficient Hardware Implementations for Lattice-Based Cryptography Primitives"),(0,r.yg)("br",{parentName:"p"}),"\n","Mert, Ahmet Can. Efficient hardware implementations for lattice-based cryptography primitives. Diss. 2021.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"KiD: A Hardware Design Framework Targeting Unified NTT for CRYSTALS-Kyber and Dilithium"),(0,r.yg)("br",{parentName:"p"}),"\n",'Mandal, Suraj, and Debapriya Basu Roy. "Kid: A hardware design framework targeting unified ntt multiplication for crystals-kyber and crystals-dilithium on fpga." 2024 37th International Conference on VLSI Design and 2024 23rd International Conference on Embedded Systems (VLSID). IEEE, 2024.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Lightweight Hardware Implementation of R-LWE Lattice-Based Cryptography"),(0,r.yg)("br",{parentName:"p"}),"\n",'Fan, Sailong, et al. "Lightweight hardware implementation of R-LWE lattice-based cryptography." 2018 IEEE Asia Pacific Conference on Circuits and Systems (APCCAS). IEEE, 2018.'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Focus on Number Theoretic Transform (NTT) acceleration"),(0,r.yg)("li",{parentName:"ul"},"Implement modular arithmetic units"),(0,r.yg)("li",{parentName:"ul"},"Use polynomial multiplication optimization"),(0,r.yg)("li",{parentName:"ul"},"Support multiple security levels (Kyber-512, Kyber-768, Kyber-1024)"),(0,r.yg)("li",{parentName:"ul"},"Optimize memory bandwidth for coefficient storage")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"6-random-number-generation-nist-compliant"},"6. Random Number Generation (NIST Compliant)"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement True Random Number Generator (TRNG) compliant with NIST SP 800-90A/B/C standards."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"FPGA-based True Random Number Generation using Circuit Metastability with Adaptive Feedback Control"),(0,r.yg)("br",{parentName:"p"}),"\n",'Majzoobi, Mehrdad, Farinaz Koushanfar, and Srinivas Devadas. "FPGA-based true random number generation using circuit metastability with adaptive feedback control." International Workshop on Cryptographic Hardware and Embedded Systems. Berlin, Heidelberg: Springer Berlin Heidelberg, 2011.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"neoTRNG: A Tiny and Platform-Independent True Random Number Generator"),(0,r.yg)("br",{parentName:"p"}),"\n","Open Source Project",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("em",{parentName:"p"},"GitHub Repository"),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("a",{parentName:"p",href:"https://github.com/stnolting/neoTRNG"},"https://github.com/stnolting/neoTRNG"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"A metastability-based true random number generator on FPGA"),(0,r.yg)("br",{parentName:"p"}),"\n",'Li, Chaoyang, et al. "A metastability-based true random number generator on FPGA." 2017 IEEE 12th international conference on ASIC (ASICON). IEEE, 2017.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"NIST SP 800-90B Compliant Entropy Source Implementation"),(0,r.yg)("br",{parentName:"p"}),"\n","Xiphera Documentation",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("em",{parentName:"p"},"Commercial IP Documentation"),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("a",{parentName:"p",href:"https://xiphera.com/random-number-generation/true-random-number-generation/"},"https://xiphera.com/random-number-generation/true-random-number-generation/"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"True Random Number Generator Hardware (AN-1200)"),(0,r.yg)("br",{parentName:"p"}),"\n","Renesas Application Note",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("em",{parentName:"p"},"Technical Documentation"),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("a",{parentName:"p",href:"https://www.renesas.com/us/en/document/apn/1200-true-random-number-generator-hardware"},"https://www.renesas.com/us/en/document/apn/1200-true-random-number-generator-hardware")))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Use ring oscillator or metastability-based entropy source"),(0,r.yg)("li",{parentName:"ul"},"Implement von Neumann corrector for bias removal"),(0,r.yg)("li",{parentName:"ul"},"Add NIST SP 800-22 statistical test interface"),(0,r.yg)("li",{parentName:"ul"},"Include health monitoring and startup tests")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"7-quantization-of-ai-models-on-fpga"},"7. Quantization of AI Models on FPGA"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement neural network quantization techniques (INT8, INT4, binary) for efficient FPGA deployment."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Trainable Fixed-Point Quantization for Deep Learning Acceleration on FPGAs"),(0,r.yg)("br",{parentName:"p"}),"\n",'Dai, Dingyi, et al. "Trainable fixed-point quantization for deep learning acceleration on fpgas." arXiv preprint arXiv:2401.17544 (2024).')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Post-training quantization for efficient FPGA-based neural network acceleration"),(0,r.yg)("br",{parentName:"p"}),"\n",'Salah, Oumayma Bel Haj, et al. "Post-training quantization for efficient FPGA-based neural network acceleration." Integration (2025): 102508.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Quantized convolutional neural networks: a hardware perspective"),(0,r.yg)("br",{parentName:"p"}),"\n",'Zhang, Li, et al. "Quantized convolutional neural networks: a hardware perspective." Frontiers in Electronics 6 (2025): 1469802.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Quantization-Aware NN Layers with High-throughput FPGA Implementation"),(0,r.yg)("br",{parentName:"p"}),"\n",'Pistellato, Mara, et al. "Quantization-aware nn layers with high-throughput fpga implementation for edge ai." Sensors 23.10 (2023): 4667.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"On-Chip Hardware-Aware Quantization for Mixed Precision Neural Networks"),(0,r.yg)("br",{parentName:"p"}),"\n",'Huang, Wei, et al. "On-Chip Hardware-Aware Quantization for Mixed Precision Neural Networks." arXiv preprint arXiv:2309.01945 (2023).'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Start with 8-bit integer quantization"),(0,r.yg)("li",{parentName:"ul"},"Implement per-channel or per-layer quantization"),(0,r.yg)("li",{parentName:"ul"},"Support common layers (Conv2D, Dense, BatchNorm)"),(0,r.yg)("li",{parentName:"ul"},"Use fixed-point arithmetic throughout"),(0,r.yg)("li",{parentName:"ul"},"Compare accuracy vs. bit-width trade-offs")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"8-large-number-representation-system-on-fpgacuda"},"8. Large Number Representation System on FPGA/CUDA"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement arbitrary-precision arithmetic for cryptography and scientific computing."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"ARCHITECT: Arbitrary-precision Hardware with Digit Elision for Efficient Iterative Compute"),(0,r.yg)("br",{parentName:"p"}),"\n",'Li, He, et al. "Architect: Arbitrary-precision hardware with digit elision for efficient iterative compute." IEEE Transactions on Very Large Scale Integration (VLSI) Systems 28.2 (2019): 516-529.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"FPGA implementation of the multiplication operation in multiple-precision arithmetic"),(0,r.yg)("br",{parentName:"p"}),"\n",'Rudnicki, Kamil, and Tomasz P. Stefa\u0144ski. "FPGA implementation of the multiplication operation in multiple-precision arithmetic." 2017 MIXDES-24th International Conference" Mixed Design of Integrated Circuits and Systems. IEEE, 2017.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Fast Arbitrary Precision Floating Point on FPGA"),(0,r.yg)("br",{parentName:"p"}),"\n",'de Fine Licht, Johannes, et al. "Fast Arbitrary Precision Floating Point on FPGA." 2022 IEEE 30th Annual International Symposium on Field-Programmable Custom Computing Machines (FCCM). IEEE, 2022.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"GPU Implementations for Midsize Integer Addition and Multiplication"),(0,r.yg)("br",{parentName:"p"}),"\n",'Oancea, Cosmin E., and Stephen M. Watt. "GPU Implementations for Midsize Integer Addition and Multiplication." arXiv preprint arXiv:2405.14642 (2024).')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Big Integer Multiplication with CUDA FFT (cuFFT) Library"),(0,r.yg)("br",{parentName:"p"}),"\n",'Bantikyan, Hovhannes. "Big integer multiplication with CUDA FFT (cuFFT) library." (2014).'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Implement basic operations (add, subtract, multiply)"),(0,r.yg)("li",{parentName:"ul"},"Use Karatsuba or FFT-based multiplication for large numbers"),(0,r.yg)("li",{parentName:"ul"},"Support variable precision (64-bit to 8192-bit)"),(0,r.yg)("li",{parentName:"ul"},"Optimize DSP block utilization"),(0,r.yg)("li",{parentName:"ul"},"Consider Montgomery multiplication for modular arithmetic")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"9-point-cloud-rgb-calibration"},"9. Point Cloud-RGB Calibration"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement extrinsic calibration between LiDAR sensors and RGB cameras for sensor fusion."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"FAST-Calib: LiDAR-Camera Extrinsic Calibration in One Second"),(0,r.yg)("br",{parentName:"p"}),"\n",'Zheng, Chunran, and Fu Zhang. "FAST-Calib: LiDAR-Camera Extrinsic Calibration in One Second." arXiv preprint arXiv:2507.17210 (2025).')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Extrinsic Calibration of 3D Sensors Using a Spherical Target"),(0,r.yg)("br",{parentName:"p"}),"\n",'Ruan, Minghao, and Daniel Huber. "Calibration of 3D sensors using a spherical target." 2014 2nd International Conference on 3D Vision. Vol. 1. IEEE, 2014.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"What Is Lidar-Camera Calibration?"),(0,r.yg)("br",{parentName:"p"}),"\n","MATLAB Documentation (2024)",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("em",{parentName:"p"},"MathWorks Technical Documentation"),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("a",{parentName:"p",href:"https://www.mathworks.com/help/lidar/ug/lidar-camera-calibration.html"},"https://www.mathworks.com/help/lidar/ug/lidar-camera-calibration.html"))),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"External multi-modal imaging sensor calibration for sensor fusion"),(0,r.yg)("br",{parentName:"p"}),"\n",'Qiu, Zhouyan, et al. "External multi-modal imaging sensor calibration for sensor fusion: A review." Information Fusion 97 (2023): 101806.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"2D LiDAR and Camera Fusion in 3D Modeling of Indoor Environments"),(0,r.yg)("br",{parentName:"p"}),"\n",'Li, Juan, Xiang He, and Jia Li. "2D LiDAR and camera fusion in 3D modeling of indoor environment." 2015 National Aerospace and Electronics Conference (NAECON). IEEE, 2015.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"LiDAR-camera calibration using 3D-3D point correspondences"),(0,r.yg)("br",{parentName:"p"}),"\n",'Dhall, Ankit, et al. "LiDAR-camera calibration using 3D-3D point correspondences." arXiv preprint arXiv:1705.09785 (2017).'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Implement checkerboard or circle grid detection"),(0,r.yg)("li",{parentName:"ul"},"Use PnP (Perspective-n-Point) algorithm"),(0,r.yg)("li",{parentName:"ul"},"Calculate rotation and translation matrices"),(0,r.yg)("li",{parentName:"ul"},"Support multiple calibration patterns"),(0,r.yg)("li",{parentName:"ul"},"Implement outlier rejection (RANSAC)")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"10-slam-simultaneous-localization-and-mapping"},"10. SLAM (Simultaneous Localization and Mapping)"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement real-time SLAM algorithms for autonomous navigation using LiDAR or cameras."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Energy-efficient FPGA-accelerated LiDAR-based SLAM for Embedded Robotics"),(0,r.yg)("br",{parentName:"p"}),"\n",'Flottmann, Marcel, et al. "Energy-efficient FPGA-accelerated LiDAR-based SLAM for embedded robotics." 2021 International Conference on Field-Programmable Technology (ICFPT). IEEE, 2021.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"A Universal LiDAR SLAM Accelerator System on Low-cost FPGA"),(0,r.yg)("br",{parentName:"p"}),"\n",'Sugiura, Keisuke, and Hiroki Matsutani. "A universal LiDAR SLAM accelerator system on low-cost FPGA." IEEE Access 10 (2022): 26931-26947.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Accelerated Feature Detectors for Visual SLAM: A Comparative Study of FPGA vs GPU"),(0,r.yg)("br",{parentName:"p"}),"\n",'Ye, Ruiqi, and Mikel Luj\xe1n. "Accelerated Feature Detectors for Visual SLAM: A Comparative Study of FPGA vs GPU." arXiv preprint arXiv:2510.13546 (2025).')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"An Edge-Server Partitioning Method for 3D LiDAR SLAM on FPGAs"),(0,r.yg)("br",{parentName:"p"}),"\n",'Yasuda, Mizuki, et al. "An Edge-Server Partitioning Method for 3D LiDAR SLAM on FPGAs." 2023 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW). IEEE, 2023.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"An FPGA-based Real-time Simultaneous Localization and Mapping System"),(0,r.yg)("br",{parentName:"p"}),"\n",'Gu, Mengyuan, et al. "An FPGA-based real-time simultaneous localization and mapping system." 2015 International Conference on Field Programmable Technology (FPT). IEEE, 2015.'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Start with 2D LiDAR SLAM (simpler than 3D)"),(0,r.yg)("li",{parentName:"ul"},"Implement scan matching (ICP or correlative)"),(0,r.yg)("li",{parentName:"ul"},"Use occupancy grid or TSDF map representation"),(0,r.yg)("li",{parentName:"ul"},"Add loop closure detection for drift correction")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"11-ground-plane-detection-and-segmentation"},"11. Ground Plane Detection and Segmentation"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement real-time ground plane segmentation for LiDAR point clouds using channel-based methods or RANSAC for autonomous navigation and obstacle detection."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Stream-Based Ground Segmentation for Real-Time LiDAR Point Cloud Processing on FPGA"),(0,r.yg)("br",{parentName:"p"}),"\n",'Zhang, Xiao, et al. "Stream-Based Ground Segmentation for Real-Time LiDAR Point Cloud Processing on FPGA." arXiv preprint arXiv:2408.10410 (2024).')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Ground Plane Segmentation of Lidar Data on FPGA"),(0,r.yg)("br",{parentName:"p"}),"\n","MathWorks (2024)",(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("em",{parentName:"p"},"Technical Documentation"),(0,r.yg)("br",{parentName:"p"}),"\n",(0,r.yg)("a",{parentName:"p",href:"https://www.mathworks.com/help/visionhdl/ug/lidar-ground-segmentation.html"},"https://www.mathworks.com/help/visionhdl/ug/lidar-ground-segmentation.html"),(0,r.yg)("br",{parentName:"p"}),"\n","Savitzky-Golay smoothing with breadth-first search labeling")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"RANSAC for Robotic Applications: A Survey"),(0,r.yg)("br",{parentName:"p"}),"\n",'Mart\xednez-Otzeta, Jos\xe9 Mar\xeda, et al. "Ransac for robotic applications: A survey." Sensors 23.1 (2022): 327.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"A Survey of RANSAC Enhancements for Plane Detection in 3D Point Clouds"),(0,r.yg)("br",{parentName:"p"}),"\n",'Zeineldin, Ramy Ashraf, and Nawal Ahmed El-Fishawy. "A survey of RANSAC enhancements for plane detection in 3D point clouds." Menoufia J. Electron. Eng. Res 26.2 (2017): 519-537.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Adaptive Ground Segmentation Method for Real-time Mobile Robot Applications"),(0,r.yg)("br",{parentName:"p"}),"\n",'Vu, Hoang, et al. "Adaptive ground segmentation method for real-time mobile robot control." International Journal of Advanced Robotic Systems 14.6 (2017): 1729881417748135.'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Start with channel-based approach (easier than RANSAC)"),(0,r.yg)("li",{parentName:"ul"},"Implement Savitzky-Golay filter for range smoothing"),(0,r.yg)("li",{parentName:"ul"},"Use flood-fill algorithm for ground labeling")),(0,r.yg)("hr",null),(0,r.yg)("h3",{id:"12-3d-object-detection-from-lidar-point-clouds"},"12. 3D Object Detection from LiDAR Point Clouds"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Description:")," Implement voxel-based or pillar-based 3D object detection."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Key Research Articles:")),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"LiFT: Lightweight, FPGA-tailored 3D Object Detection Based on LiDAR Data"),(0,r.yg)("br",{parentName:"p"}),"\n",'Lis, Konrad, Tomasz Kryjak, and Marek Gorgo\u0144. "LiFT: Lightweight, FPGA-tailored 3D object detection based on LiDAR data." International Workshop on Design and Architectures for Signal and Image Processing. Cham: Springer Nature Switzerland, 2025.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"LiDAR 3D Object Detection in FPGA with Low Bitwidth Quantization"),(0,r.yg)("br",{parentName:"p"}),"\n",'Brum, Henrique, M\xe1rio V\xe9stias, and Hor\xe1cio Neto. "LiDAR 3D object detection in FPGA with low bitwidth quantization." International Symposium on Applied Reconfigurable Computing. Cham: Springer Nature Switzerland, 2024.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"VEA: An FPGA-Based Voxel Encoding Accelerator for 3D Object Detection"),(0,r.yg)("br",{parentName:"p"}),"\n",'Li, Xin, et al. "Vea: An fpga-based voxel encoding accelerator for 3d object detection with lidar." 2022 IEEE 40th International Conference on Computer Design (ICCD). IEEE, 2022.')),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"IBB-Net: Fast Iterative Bounding Box Regression for Detection on Point Clouds"),(0,r.yg)("br",{parentName:"p"}),"\n","Miller, Brendan. IBB-Net: Fast Iterative Bounding Box Regression for Detection on Point Clouds. Diss. Master\u2019s thesis, Pittsburgh, PA (June 2020), 2020.")),(0,r.yg)("li",{parentName:"ol"},(0,r.yg)("p",{parentName:"li"},(0,r.yg)("strong",{parentName:"p"},"Deep Sensor Fusion for 3D Bounding Box Estimation"),(0,r.yg)("br",{parentName:"p"}),"\n",'Xu, Danfei, Dragomir Anguelov, and Ashesh Jain. "Pointfusion: Deep sensor fusion for 3d bounding box estimation." Proceedings of the IEEE conference on computer vision and pattern recognition. 2018.'))),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"Implementation Suggestions:")),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Focus on pillar-based approach (simpler than full 3D voxels)"),(0,r.yg)("li",{parentName:"ul"},"Use 2D convolutions on bird's-eye-view representation"),(0,r.yg)("li",{parentName:"ul"},"Implement non-maximum suppression (NMS) in hardware")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"general-guidelines-for-all-projects"},"General Guidelines for All Projects"),(0,r.yg)("h3",{id:"documentation-phase-tips"},"Documentation Phase Tips"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Use IEEE Xplore, ACM Digital Library, arXiv for papers"),(0,r.yg)("li",{parentName:"ul"},"Focus on recent papers (2015-2025) for state-of-the-art"),(0,r.yg)("li",{parentName:"ul"},"Include both algorithmic and implementation papers"),(0,r.yg)("li",{parentName:"ul"},"Explain mathematical foundations clearly"),(0,r.yg)("li",{parentName:"ul"},"Discuss hardware-software trade-offs")),(0,r.yg)("h3",{id:"implementation-phase-tips"},"Implementation Phase Tips"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Start with functional simulation before synthesis"),(0,r.yg)("li",{parentName:"ul"},"Use modular design for easier debugging"),(0,r.yg)("li",{parentName:"ul"},"Document all interfaces and protocols"),(0,r.yg)("li",{parentName:"ul"},"Include comprehensive testbenches"),(0,r.yg)("li",{parentName:"ul"},"Use version control (Git) from day one"),(0,r.yg)("li",{parentName:"ul"},"Write clear README with build instructions")),(0,r.yg)("h3",{id:"evaluation-phase-tips"},"Evaluation Phase Tips"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Use realistic test vectors/datasets"),(0,r.yg)("li",{parentName:"ul"},"Compare against reference implementations"),(0,r.yg)("li",{parentName:"ul"},"Report both resource utilization and performance"),(0,r.yg)("li",{parentName:"ul"},"Analyze power consumption if tools support it"),(0,r.yg)("li",{parentName:"ul"},"Create graphs and tables for results"),(0,r.yg)("li",{parentName:"ul"},"Discuss limitations and future improvements")),(0,r.yg)("h3",{id:"fpga-tools-and-platforms"},"FPGA Tools and Platforms"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Xilinx:")," Vivado (for Artix-7)"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Open-Source:")," Icarus Verilog, Verilator "),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Synthesis:")," Vivado Synthesis, Yosys"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Place & Route:")," Vivado Implementation, nextpnr"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Simulation:")," ModelSim, Vivado Simulator, Gtkwave"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"HLS:")," Vitis HLS, HLSLibs, ScaleHLS")),(0,r.yg)("h3",{id:"recommended-development-flow"},"Recommended Development Flow"),(0,r.yg)("ol",null,(0,r.yg)("li",{parentName:"ol"},"Algorithm understanding and MATLAB/Python prototype"),(0,r.yg)("li",{parentName:"ol"},"HDL implementation with testbench"),(0,r.yg)("li",{parentName:"ol"},"Functional simulation and verification"),(0,r.yg)("li",{parentName:"ol"},"Synthesis and timing analysis"),(0,r.yg)("li",{parentName:"ol"},"FPGA implementation and hardware testing"),(0,r.yg)("li",{parentName:"ol"},"Performance evaluation and optimization")),(0,r.yg)("h3",{id:"grading-criteria-approximate"},"Grading Criteria (Approximate)"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Documentation:")," 10",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Literature review quality"),(0,r.yg)("li",{parentName:"ul"},"Problem understanding"),(0,r.yg)("li",{parentName:"ul"},"Presentation clarity"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Implementation:")," 10",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Code quality and organization"),(0,r.yg)("li",{parentName:"ul"},"Functionality and correctness"),(0,r.yg)("li",{parentName:"ul"},"Testing and verification"))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Evaluation:")," 10",(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"Synthesis results"),(0,r.yg)("li",{parentName:"ul"},"Performance analysis"),(0,r.yg)("li",{parentName:"ul"},"Comparison with baselines")))),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"important-deadlines"},"Important Deadlines"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Documentation Phase:")," 12.11.2025, 23:59"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Implementation Phase:")," 17.12.2025, 23:59"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Final Evaluation:")," 14.01.2026, 23:59")),(0,r.yg)("hr",null),(0,r.yg)("h2",{id:"additional-resources"},"Additional Resources"),(0,r.yg)("h3",{id:"online-courses-and-tutorials"},"Online Courses and Tutorials"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"FPGAs for Beginners")," (Nandland, YouTube)"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Hardware Description Languages")," (HDLBits)"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Chisel Bootcamp")," (UC Berkeley)"),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"FPGA Design Patterns"))),(0,r.yg)("h3",{id:"useful-websites"},"Useful Websites"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"IEEE Xplore:")," ",(0,r.yg)("a",{parentName:"li",href:"https://ieeexplore.ieee.org"},"https://ieeexplore.ieee.org")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"ACM Digital Library:")," ",(0,r.yg)("a",{parentName:"li",href:"https://dl.acm.org"},"https://dl.acm.org")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"arXiv.org:")," ",(0,r.yg)("a",{parentName:"li",href:"https://arxiv.org"},"https://arxiv.org")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"FPGA4Student:")," ",(0,r.yg)("a",{parentName:"li",href:"https://www.fpga4student.com"},"https://www.fpga4student.com")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"GitHub:"),' Search for "FPGA + ',"[your topic]",'"')),(0,r.yg)("h3",{id:"books"},"Books"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},"Digital Design and Computer Architecture"),(0,r.yg)("li",{parentName:"ul"},"FPGAs: Fundamentals, Advanced Features, and Applications in Industrial Electronics"),(0,r.yg)("li",{parentName:"ul"},"RTL Modeling with SystemVerilog for ASIC and FPGA Design"),(0,r.yg)("li",{parentName:"ul"},"High-Level Synthesis: from Algorithm to Digital Circuit")),(0,r.yg)("hr",null))}u.isMDXComponent=!0},5680:(e,a,n)=>{n.d(a,{xA:()=>s,yg:()=>c});var t=n(6540);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter(function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable})),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach(function(a){r(e,a,n[a])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))})}return e}function l(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=t.createContext({}),m=function(e){var a=t.useContext(p),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},s=function(e){var a=m(e.components);return t.createElement(p.Provider,{value:a},e.children)},g="mdxType",u={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},y=t.forwardRef(function(e,a){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),g=m(n),y=r,c=g["".concat(p,".").concat(y)]||g[y]||u[y]||i;return n?t.createElement(c,o(o({ref:a},s),{},{components:n})):t.createElement(c,o({ref:a},s))});function c(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=y;var l={};for(var p in a)hasOwnProperty.call(a,p)&&(l[p]=a[p]);l.originalType=e,l[g]="string"==typeof e?e:r,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);